//@import "../tools/paymentinfo";

fieldset.payment {
  p.error {
    margin-top: -$base-spacing;
    font-size: $small-size;

    &.error-invalid-request {
      margin-top: -$base-spacing / 2;
    }
  }
}

.m-form-item {
  
  .a-input-prepend {
    position: relative;
    .a-prefix {
      display: inline-block;
      position: absolute;
      left: $quarter-space;
      top: 0.4em;
      color: $gray-light;
    }
    input {
      display: inline-block;
      text-indent: $half-space;
      //width: 100%;
    }
  }
}

.form-item-recaptcha,
.g-recaptcha {
  margin-bottom: $h4-space;
}

input,
label,
select {
  &.error {
    color: $minnpost-red-error;
  }
}

.success {
  color: $minnpost-green;
}

label {

  &.required::after {
    content: "*";
    color: $minnpost-red-error;
  }

}

.m-form-item-with-help {
  position: relative;
}
.m-form-item-with-help .help-link {
  position: absolute;
  top: 2.25em;
  right: 0.375em;
  cursor: help;
  background: transparent url('/static/img/help.png') no-repeat top left;
  background-position: 0 0;
  display: inline-block;
  height: 12px;
  margin-top: 2px;
  padding: 0;
  width: 12px;
  @include hide-text;
}
.m-form-item-with-help .form-help {
  margin: 0 0 $h5-space 0;
  font-family: $helvetica;
  color: $gray-med;
}

.no-js .m-form-item-nojs {
  display: block;
}
.js .m-form-item-nojs {
  display: none;
}

#{$all-text-inputs},
select[multiple=multiple],
textarea {

  &.error {
    color: $minnpost-red-error;
    border: 1px solid $minnpost-red-error;
  }

}

.invalid input:required:invalid,
.invalid select:required:invalid,
.invalid textarea:required:invalid {
  color: $minnpost-red-error;
  border: 1px solid $minnpost-red-error;
}

.invalid .error label {
  color: $minnpost-red-error; 
}

.payment .payment-method-group, .payment .credit-card-group {

  .error {
    margin-top: 0;
    color: $minnpost-red-error;
  }

  label {
    position: relative;
    &.required::after {
      content: "";
    }
    &.required span::after {
      content: "*";
      color: $minnpost-red-error;
    }
    &.required .brand::after {
      content: "";
    }
    .brand {
      width: 30px;
      text-align: right;
      position: absolute;
      top: 2.25em;
      right: 1em;
    }
  }

  .card-group > div {
    float: left;
    margin-right: 2.35765%;
    width: 48.8212%;
    &:last-child {
      margin-right: 0;
    }
  }

  .stripe-field {
    background-color: $base-background-color;
    border: $base-border;
    border-radius: $base-border-radius;
    //box-shadow: $form-box-shadow;
    box-sizing: border-box;
    margin: $base-spacing / 6 0 $base-spacing / 2 0;
    padding: 0 $base-spacing / 3;
    transition: border-color;
    width: 100%;
  }

  #cc-number-wrapper {
    position: relative;
    .card-image {
      position: absolute;
      top: 2.75em;
      right: 1em;
    }
  }

  // styles for new elements field from stripe
  .credit-card-element {
    .StripeElement {
      background-color: $base-background-color;
      border: $base-border;
      border-radius: $base-border-radius;
      box-sizing: border-box;
      margin-bottom: $base-spacing / 2;
      padding: $base-spacing / 3;
      transition: border-color;
      width: 100%;
    }
  }

}

.js .payment-method-group .payment-method {
  display: none;
}
.js .payment-method-group .payment-method.active {
  display: block;
}

// this whole group only does the thing that tries to combine all the fields
// not confident that it is usable, currently



.card-instruction, .check-field {
  font-size: 80%;
  color: $gray-dark;

  &.invalid {
    color: $minnpost-red-error;
  }

  &.cc-error {
    font-family: $heading-font-family;
  }

  /*&.valid {
    color: $valid;
  }*/
}

.check-field {

  &.invalid {
    display: block;
    margin-top: -$quarter-space;
    margin-bottom: $base-spacing;
  }

  /*&.valid {
    color: $valid;
  }*/
}

.m-form-item-newsletters input {
  margin-bottom: 0;
}

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin-right: $small-spacing / 2;
}
